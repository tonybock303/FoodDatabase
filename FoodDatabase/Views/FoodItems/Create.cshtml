@using FoodDatabase.Models
@model FoodDatabase.Models.FoodItems.FoodItemViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>FoodItem</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Brand, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Brand, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Unit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Unit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Calories, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Calories, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Calories, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Carbs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Carbs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Carbs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Fats, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Fats, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Fats, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Protein, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Protein, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Protein, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Fibre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.Fibre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Fibre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.GlycemicIndex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FoodItem.GlycemicIndex, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.GlycemicIndex, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.FoodItemType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.FoodItem.FoodItemType, Model.CreateFoodItemTypesSelectListItems(), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.FoodItemType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FoodItem.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.FoodItem.Category, Model.CreateCategoriesSelectListItem(), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FoodItem.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <a href="/FoodItemTypes/Create">
                <input type="button" value="Create - Food Item Type" />
            </a>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
