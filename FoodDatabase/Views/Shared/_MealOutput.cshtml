@model  FoodDatabase.Models.MealOutput

<style>
    .bottomRow {
        border-bottom: 2px double pink !important;
        border-top: 2px double pink !important;
        background-color: lightcyan;
    }
    .totals {
        width: 30px;
        text-align:center;
        vertical-align: middle;
        font-size: large;
    }

    .theTotal {
        vertical-align: middle;
        font-size: x-large;
    }
</style>

<tr class="bottomRow">
    <td class="theTotal name">
        <span>Total</span>
    </td>
    <td class="totals unit" id="unitTotal_@Model.Id"></td>
    <td class="totals quantity" id="quantityTotal_@Model.Id"></td>
    <td class="totals calories" id="caloriesTotal_@Model.Id">
        @Html.DisplayFor(model => model.Calories)
    </td>
    <td class="totals carbs" id="carbsTotal_@Model.Id">
        @Html.DisplayFor(model => model.Carbs)
    </td>
    <td class="totals fats" id="fatsTotal_@Model.Id">
        @Html.DisplayFor(model => model.Fats)
    </td>
    <td class="totals protein" id="proteinTotal_@Model.Id">
        @Html.DisplayFor(model => model.Protein)
    </td>
    <td class="totals fibre" id="fibreTotal_@Model.Id">
        @Html.DisplayFor(model => model.Fibre)
    </td>
    <td class="totals glycemicIndex" id="glycemicIndexTotal_@Model.Id">
        @Html.DisplayFor(model => model.GlycemicLoad)
    </td>
    <td class="totals foodCategory"></td>
    <td class="totals typeName"></td>
    <td class="totals controls"></td>
</tr>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery-3.5.1.js"></script>
<script>
    $(document).ready(function () {
        var allCheckboxes = $("[class^=foodItemSelect]");
        
        allCheckboxes.each(function () {
            $(this).change(function () {
                
                var meal = $(this).val().split('_')[0];
                var checkboxes = $("[class^=foodItemSelect_" + meal + "]:checked");
                
                var calTotal = 0;
                var carbTotal = 0;
                var fatTotal = 0;
                var proTotal = 0;
                var fibTotal = 0;
                var glyTotal = 0;
                //if (checkboxes.length == 0) {
                //    $(".macros").text(0);
                //}
                for (var i = 0; i < checkboxes.length; i++) {
                    var checkboxValue = checkboxes[i].value;
                    calTotal = calTotal + parseFloat($("#foodItemCals_" + checkboxValue).text());
                    carbTotal = carbTotal + parseFloat($("#foodItemCarbs_" + checkboxValue).text());
                    fatTotal = fatTotal + parseFloat($("#foodItemFats_" + checkboxValue).text());
                    proTotal = proTotal + parseFloat($("#foodItemProtein_" + checkboxValue).text());
                    fibTotal = fibTotal + parseFloat($("#foodItemFibre_" + checkboxValue).text());
                }
                
                var carbGly = 0;
                for (var i = 0; i < checkboxes.length; i++) {
                    var checkboxValue = checkboxes[i].value;
                    carbGly = parseFloat(($("#foodItemCarbs_" + checkboxValue).text()) / carbTotal) * parseFloat($("#foodItemGlycemicIndex_" + checkboxValue).text());
                    glyTotal = glyTotal + carbGly;
                }
                var netCarbs = carbTotal - fibTotal;

                glyTotal = (glyTotal * netCarbs / 100).toFixed(0);
                console.log("gly total = " + glyTotal);
                console.log("carb total = " + carbTotal);
                console.log("net carbs = " + netCarbs);
                $("#caloriesTotal_" + meal).text(calTotal);
                $("#carbsTotal_" + meal).text(carbTotal);
                $("#fatsTotal_" + meal).text(fatTotal);
                $("#proteinTotal_" + meal).text(proTotal);
                $("#fibreTotal_" + meal).text(fibTotal);
                $("#glycemicIndexTotal_" + meal).text(glyTotal);
            });
        });
    });
</script>